name: C/C++ CI

on:
  push:
    branches: [ ci ]

jobs:
  build:

    runs-on: ubuntu-latest
    container:
      image: antonkozlov/docker-build
    steps:
    - uses: actions/checkout@v2
    - run: bash ./configure --disable-warnings-as-errors --with-native-debug-symbols=none
    - run: make images
    - run: tar -C build/linux-x86_64-server-release/images/ -zcf $PWD/jdk.tar.gz jdk
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: HEAD
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./jdk.tar.gz
        asset_name: jdk.tar.gz
        asset_content_type: application/gzip
